{"version":3,"file":"static/js/976.f5c855ab.chunk.js","mappings":"oMAEaA,EAAkB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC1BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,wBACGF,EAAWG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,GAAhB,OACd,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA1C,SACGG,GAASC,KAFLC,EADK,OAUvB,C,uJCjBYI,EAAY,SAAC,GAInB,IAHLC,EAGI,EAHJA,eACAC,EAEI,EAFJA,WACAC,EACI,EADJA,oBAEA,OACE,kBAAMC,OAAO,GAAGC,SAAUJ,EAA1B,WACE,kBAAOK,KAAK,OAAOC,MAAOL,EAAYM,SAAUL,KAChD,mBAAQG,KAAK,SAAb,sBAGL,ECoCD,EAzCe,WACb,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAWF,EAAaG,IAAI,YAU5BC,EAAY,mCAAG,WAAOC,EAAGC,GAAV,iEACnBD,EAAEE,iBACFN,EAAgB,CAAEK,MAAAA,IAFC,2CAAH,wDAgBlB,OAXAE,EAAAA,EAAAA,YAAU,WACR,GAAKN,EAGL,KACEO,EAAAA,EAAAA,IAAeP,GAAUQ,MAAK,SAAAC,GAAG,OAAIb,EAAUa,EAAd,GAGlC,CAFC,MAAOC,GACPC,QAAQD,MAAMA,EACf,CACF,GAAE,CAACV,EAAUF,KAGZ,iCACE,SAACb,EAAD,CACEC,eAAgB,SAAAiB,GAAC,OAAID,EAAaC,EAAGH,EAApB,EACjBb,WAAYa,EACZZ,oBA7BoB,SAAAe,GACxB,IAAMS,EAAgBT,EAAEU,OAAOrB,MAC/B,GAAsB,KAAlBoB,EACF,OAAOb,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,SAAUY,GAC7B,KAyBG,SAACtC,EAAA,EAAD,CAAiBC,WAAYoB,MAGlC,C,+LCvCM,SAAemB,IAAtB,4CAAO,OAAP,oBAAO,oGACaC,EAAAA,EAAAA,IAAU,uBADvB,cACCN,EADD,yBAEEA,EAAIO,KAAKC,SAFX,kEAKA,SAAeV,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,uFACaW,EAAAA,EAAAA,IAAA,8BAAiCX,IAD9C,cACCK,EADD,yBAEEA,EAAIO,KAAKC,SAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACaJ,EAAAA,EAAAA,IAAA,gBAAmBI,IADhC,cACCV,EADD,yBAEEA,EAAIO,MAFN,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAoCD,GAApC,uFACaJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,aADb,cACCV,EADD,yBAEEA,EAAIO,KAAKK,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAsCH,GAAtC,uFACaJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,aADb,cACCV,EADD,yBAEEA,EAAIO,KAAKC,SAFX,kEAxBPF,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,4N","sources":["components/MoviesQueryList.jsx","components/SearchBar.jsx","page/Movies.jsx","services/getMovies.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nexport const MoviesQueryList = ({ moviesList }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul>\n        {moviesList.map(({ title, name, id }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title || name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","export const SearchBar = ({\n  onHandleSubmit,\n  onMoviesId,\n  onUpdateQueryString,\n}) => {\n  return (\n    <form action=\"\" onSubmit={onHandleSubmit}>\n      <input type=\"text\" value={onMoviesId} onChange={onUpdateQueryString} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMoviesQuery } from 'services/getMovies';\nimport { MoviesQueryList } from 'components/MoviesQueryList';\nimport { SearchBar } from 'components/SearchBar';\n\nconst Movies = () => {\n  const [search, setSearch] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const moviesId = searchParams.get('moviesId');\n\n  const updateQueryString = e => {\n    const moviesIdValue = e.target.value;\n    if (moviesIdValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ moviesId: moviesIdValue });\n  };\n\n  const handleSubmit = async (e, query) => {\n    e.preventDefault();\n    setSearchParams({ query });\n  };\n\n  useEffect(() => {\n    if (!moviesId) {\n      return;\n    }\n    try {\n      getMoviesQuery(moviesId).then(res => setSearch(res));\n    } catch (error) {\n      console.error(error);\n    }\n  }, [moviesId, searchParams]);\n\n  return (\n    <>\n      <SearchBar\n        onHandleSubmit={e => handleSubmit(e, moviesId)}\n        onMoviesId={moviesId}\n        onUpdateQueryString={updateQueryString}\n      />\n      <MoviesQueryList moviesList={search} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZDI5NDI3NDZkZGQwNzIzZTk5YzYyNDVmZDkwM2JlZCIsInN1YiI6IjY0YmQyNTNhMGVkMmFiMDBlMmRhYjY4YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.usFVKO1fi_bibknfzjxz84ON7pNr7gg38J8efPhFlyU';\n\nexport async function getMovies() {\n  const res = await axios.get('/trending/movie/day');\n  return res.data.results;\n}\n\nexport async function getMoviesQuery(query) {\n  const res = await axios.get(`/search/movie?query=${query}`);\n  return res.data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const res = await axios.get(`movie/${movieId}`);\n  return res.data;\n}\n\nexport async function getMovieDetailsActor(movieId) {\n  const res = await axios.get(`movie/${movieId}/credits`);\n  return res.data.cast;\n}\n\nexport async function getMovieDetailsReviews(movieId) {\n  const res = await axios.get(`movie/${movieId}/reviews`);\n  return res.data.results;\n}\n"],"names":["MoviesQueryList","moviesList","location","useLocation","map","title","name","id","to","state","from","SearchBar","onHandleSubmit","onMoviesId","onUpdateQueryString","action","onSubmit","type","value","onChange","useState","search","setSearch","useSearchParams","searchParams","setSearchParams","moviesId","get","handleSubmit","e","query","preventDefault","useEffect","getMoviesQuery","then","res","error","console","moviesIdValue","target","getMovies","axios","data","results","getMovieDetails","movieId","getMovieDetailsActor","cast","getMovieDetailsReviews"],"sourceRoot":""}