{"version":3,"file":"static/js/560.f77b0b27.chunk.js","mappings":"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","sources":["page/MovieDetails.jsx","services/getMovies.js"],"sourcesContent":["import React, { useState, useEffect, useRef, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'services/getMovies';\nimport { styled } from '@mui/system';\nimport { Button, Typography, Paper } from '@mui/material';\n\nconst BackButton = styled(Button)({\n  backgroundColor: '#E50914',\n  color: 'white',\n  '&:hover': {\n    backgroundColor: '#C90813',\n  },\n});\n\nconst MovieContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: '20px',\n  marginBottom: '20px',\n});\n\nconst MoviePoster = styled('img')({\n  width: '300px',\n  height: '450px',\n  borderRadius: '8px',\n  boxShadow: '0px 4px 20px rgba(0, 0, 0, 0.2)',\n});\n\nconst MovieDetailsContainer = styled('div')({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '10px',\n});\n\nconst GenresList = styled('ul')({\n  listStyle: 'none',\n  display: 'flex',\n  gap: '8px',\n  margin: 0,\n  padding: 0,\n});\n\nconst GenreItem = styled('li')({\n  fontSize: '14px',\n  color: '#E50914',\n});\n\nconst AdditionalInfo = styled(Paper)({\n  padding: '20px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  borderRadius: '8px',\n  background: 'transparent',\n});\n\nconst NavLinkStyled = styled(Link)({\n  color: '#E50914',\n  textDecoration: 'none',\n  fontSize: '18px',\n  fontWeight: 'bold',\n  transition: 'color 0.3s',\n  '&:hover': {\n    color: '#C90813',\n  },\n});\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieDetailsId } = useParams();\n\n  const Location = useLocation();\n  const backLinkLocationRef = useRef(Location.state?.from ?? '/');\n\n  useEffect(() => {\n    getMovieDetails(movieDetailsId)\n      .then(res => {\n        setMovieDetails(res);\n      })\n      .catch(error => console.error('Error fetching movie details:', error));\n  }, [movieDetailsId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  const { poster_path, original_title, overview, genres } = movieDetails;\n\n  return (\n    <>\n      <BackButton component={Link} to={backLinkLocationRef.current}>\n        Go back\n      </BackButton>\n      <MovieContainer>\n        <MoviePoster\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : `https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT2MQQS_knNjQPkLzTyixP5F51QTPzXcOU6VkpoAPAe9Q&s`\n          }\n          alt=\"\"\n        />\n        <MovieDetailsContainer>\n          <Typography variant=\"h4\">{original_title}</Typography>\n          <Typography variant=\"h6\">Overview</Typography>\n          <Typography>{overview}</Typography>\n          <Typography variant=\"subtitle1\">Genres</Typography>\n          <GenresList>\n            {genres &&\n              genres.map(({ name }) => (\n                <GenreItem key={name}>{name}</GenreItem>\n              ))}\n          </GenresList>\n        </MovieDetailsContainer>\n      </MovieContainer>\n      <AdditionalInfo>\n        <NavLinkStyled to={`cast`}>Cast</NavLinkStyled>\n        <NavLinkStyled to={`reviews`}>Reviews</NavLinkStyled>\n      </AdditionalInfo>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZDI5NDI3NDZkZGQwNzIzZTk5YzYyNDVmZDkwM2JlZCIsInN1YiI6IjY0YmQyNTNhMGVkMmFiMDBlMmRhYjY4YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.usFVKO1fi_bibknfzjxz84ON7pNr7gg38J8efPhFlyU';\n\nexport async function getMovies() {\n  const { data } = await axios.get('/trending/movie/day');\n  return data.results;\n}\n\nexport async function getMoviesQuery(query, page) {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=${page}`);\n  return data.results;\n}\n\nexport async function getMoviesQueryResult(query) {\n  const { data } = await axios.get(`/search/movie?query=${query}`);\n  return data;\n}\n\nexport async function getMovieDetails(movieId) {\n  const { data } = await axios.get(`movie/${movieId}`);\n  return data;\n}\n\nexport async function getMovieDetailsActor(movieId) {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n  return data.cast;\n}\n\nexport async function getMovieDetailsReviews(movieId) {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n  return data.results;\n}\n"],"names":["BackButton","styled","Button","backgroundColor","color","MovieContainer","display","alignItems","justifyContent","padding","marginBottom","MoviePoster","width","height","borderRadius","boxShadow","MovieDetailsContainer","flexDirection","gap","GenresList","listStyle","margin","GenreItem","fontSize","AdditionalInfo","Paper","background","NavLinkStyled","Link","textDecoration","fontWeight","transition","useState","movieDetails","setMovieDetails","movieDetailsId","useParams","Location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getMovieDetails","then","res","catch","error","console","poster_path","original_title","overview","genres","component","to","current","src","alt","variant","map","name","Suspense","fallback","getMovies","axios","data","results","getMoviesQuery","query","page","getMoviesQueryResult","movieId","getMovieDetailsActor","cast","getMovieDetailsReviews"],"sourceRoot":""}