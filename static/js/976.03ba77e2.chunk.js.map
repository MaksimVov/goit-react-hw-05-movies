{"version":3,"file":"static/js/976.03ba77e2.chunk.js","mappings":"oMAGaA,EAAkB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC1BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,8BACGF,IACC,wBACGA,EAAWG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,GAAhB,OACd,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA1C,SACGG,GAASC,KAFLC,EADK,OAWzB,C,4HClBYI,EAAY,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACpC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAiBA,OACE,kBAAMC,OAAO,GAAGL,SAVG,SAAAM,GACnBA,EAAEC,iBAEGJ,GAGLH,EAASG,EACV,EAGC,WACE,kBAAOK,KAAK,OAAOC,MAAOR,EAASS,SAjBlB,SAAAJ,GACnB,IAAMK,EAAeL,EAAEM,OAAOH,MAE9BL,EAASO,EACV,KAcG,mBAAQH,KAAK,SAAb,sBAGL,ECQD,EA5Be,WACb,OAA4BN,EAAAA,EAAAA,UAAS,MAArC,eAAOW,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAWF,EAAaG,IAAI,SAgBlC,OAVAC,EAAAA,EAAAA,YAAU,WACHF,IAILG,EAAAA,EAAAA,IAAeH,GACZI,MAAK,SAAAC,GAAG,OAAIT,EAAUS,EAAd,IACRC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACP,KAGF,iCACE,SAACnB,EAAD,CAAWC,SAhBM,SAAAG,GACnBc,EAAgB,CAAEd,MAAAA,GACnB,EAcsCF,QAASiB,KAC5C,SAAC9B,EAAA,EAAD,CAAiBC,WAAYwB,MAGlC,C,+LC1BM,SAAee,IAAtB,4CAAO,OAAP,oBAAO,oGACaC,EAAAA,EAAAA,IAAU,uBADvB,cACCN,EADD,yBAEEA,EAAIO,KAAKC,SAFX,kEAKA,SAAeV,EAAtB,+CAAO,OAAP,oBAAO,WAA8BlB,GAA9B,uFACa0B,EAAAA,EAAAA,IAAA,8BAAiC1B,IAD9C,cACCoB,EADD,yBAEEA,EAAIO,KAAKC,SAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACaJ,EAAAA,EAAAA,IAAA,gBAAmBI,IADhC,cACCV,EADD,yBAEEA,EAAIO,MAFN,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAoCD,GAApC,uFACaJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,aADb,cACCV,EADD,yBAEEA,EAAIO,KAAKK,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAsCH,GAAtC,uFACaJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,aADb,cACCV,EADD,yBAEEA,EAAIO,KAAKC,SAFX,kEAxBPF,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,4N","sources":["components/MoviesQueryList.jsx","components/SearchBar.jsx","page/Movies.jsx","services/getMovies.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesQueryList = ({ moviesList }) => {\n  const location = useLocation();\n  return (\n    <>\n      {moviesList && (\n        <ul>\n          {moviesList.map(({ title, name, id }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title || name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\n\nexport const SearchBar = ({ onSubmit, onValue }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    const queryToFetch = e.target.value;\n\n    setQuery(queryToFetch);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!query) {\n      return;\n    }\n    onSubmit(query);\n  };\n\n  return (\n    <form action=\"\" onSubmit={handleSubmit}>\n      <input type=\"text\" value={onValue} onChange={handleChange} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMoviesQuery } from 'services/getMovies';\nimport { MoviesQueryList } from 'components/MoviesQueryList';\nimport { SearchBar } from 'components/SearchBar';\n\nconst Movies = () => {\n  const [search, setSearch] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const moviesId = searchParams.get('query');\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  useEffect(() => {\n    if (!moviesId) {\n      return;\n    }\n\n    getMoviesQuery(moviesId)\n      .then(res => setSearch(res))\n      .catch(error => console.log(error));\n  }, [moviesId]);\n\n  return (\n    <>\n      <SearchBar onSubmit={handleSubmit} onValue={moviesId} />\n      <MoviesQueryList moviesList={search} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZDI5NDI3NDZkZGQwNzIzZTk5YzYyNDVmZDkwM2JlZCIsInN1YiI6IjY0YmQyNTNhMGVkMmFiMDBlMmRhYjY4YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.usFVKO1fi_bibknfzjxz84ON7pNr7gg38J8efPhFlyU';\n\nexport async function getMovies() {\n  const res = await axios.get('/trending/movie/day');\n  return res.data.results;\n}\n\nexport async function getMoviesQuery(query) {\n  const res = await axios.get(`/search/movie?query=${query}`);\n  return res.data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const res = await axios.get(`movie/${movieId}`);\n  return res.data;\n}\n\nexport async function getMovieDetailsActor(movieId) {\n  const res = await axios.get(`movie/${movieId}/credits`);\n  return res.data.cast;\n}\n\nexport async function getMovieDetailsReviews(movieId) {\n  const res = await axios.get(`movie/${movieId}/reviews`);\n  return res.data.results;\n}\n"],"names":["MoviesQueryList","moviesList","location","useLocation","map","title","name","id","to","state","from","SearchBar","onSubmit","onValue","useState","query","setQuery","action","e","preventDefault","type","value","onChange","queryToFetch","target","search","setSearch","useSearchParams","searchParams","setSearchParams","moviesId","get","useEffect","getMoviesQuery","then","res","catch","error","console","log","getMovies","axios","data","results","getMovieDetails","movieId","getMovieDetailsActor","cast","getMovieDetailsReviews"],"sourceRoot":""}